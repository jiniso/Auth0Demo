openapi: 3.0.0
info:
  version: 1.0
  title: Sample Auth0 Integration With Express with Docker
consumes:
  - application/json
produces:
  - application/json
schemes:
  - http
x-schemes:
  - unix
components:
  securitySchemes:
    bearerAuth:
      type: oauth2
      flows:     
        implicit: 
          authorizationUrl: AUTH0_DOMAIN/authorize?audience=AUTH0_AUDIENCE
          tokenUrl: AUTH0_DOMAIN/userinfo
          x-token-validation-url: AUTH0_DOMAIN/userinfo   
          scopes:
            openid: Grants access to user_id
            profile: User profile.
            read:timesheets: read:timesheets
            create:timesheets: create:timesheets
            approve:timesheets: approve:timesheets
            delete:timesheets: delete:timesheets        
security:
  - bearerAuth: []   
paths:  
  /timesheets:
    get: 
      tags: ["timesheets"]
      summary: gets all timesheets
      consumes:
        - application/json
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:    
              schema:
                type: array
                items:
                  $ref: "#/definitions/timesheet"
    post: 
      tags: ["timesheets"]
      summary: Adds a new timesheet entry
      requestBody:
        required: true
        content:
          application/json: 
            schema: 
              $ref: "#/definitions/timesheet"          
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:    
              schema:
                type: object
                $ref: "#/definitions/timesheet"                     
  /timesheets/{id}:                
    put: 
      tags: ["timesheets"]
      summary: Updates timesheet entry associated with the given id                    
      requestBody:
        required: true
        content:
          application/json: 
            schema: 
              $ref: "#/definitions/timesheet"
      parameters:
        - name: id
          in: path
          type: string              
      responses:         
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:    
              schema:
                type: object
                $ref: "#/definitions/timesheet"                     
definitions:
  timesheet:
    type: object
    required:
      - title
      - body
    properties:
      id:
        type: integer
        format: string
        readOnly: true
        description: "Primary Key"
      date:
        type: string
        format: date
        description: "Date"         
      user_id:
        type: string
        minLength: 1
        description: "User Id"        
      hours:
        type: integer
        format: string
        readOnly: true
        description: "Hours Worked"        
      approved:
        type: boolean
        default: false 
        description: "Approved"
      project:
        type: string
        minLength: 1
        description: "Associated Project"  
 